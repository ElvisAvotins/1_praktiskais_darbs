def minimax(number, depth, is_maximizing):
    if number <= 10 or depth == 0:
        return evaluate_score(number), None

    if is_maximizing:
        max_eval = -math.inf
        best_move = None
        for move in generate_moves(number):
            eval, _ = minimax(move, depth - 1, False)
            max_eval = max(max_eval, eval)
            if max_eval == eval:
                best_move = move
        return max_eval, best_move
    else:
        min_eval = math.inf
        best_move = None
        for move in generate_moves(number):
            eval, _ = minimax(move, depth - 1, True)
            min_eval = min(min_eval, eval)
            if min_eval == eval:
                best_move = move
        return min_eval, best_move

def play_game(start_number, depth):
    score, best_move = minimax(start_number, depth, True)
    if score > 0:
        return "You win!", score
    elif score < 0:
        return "You lose!", score
    else:
        return "It's a draw!", score
